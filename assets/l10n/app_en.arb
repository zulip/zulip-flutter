{
  "aboutPageTitle": "About Zulip",
  "@aboutPageTitle": {
    "description": "Title for About Zulip page."
  },
  "aboutPageAppVersion": "App version",
  "@aboutPageAppVersion": {
    "description": "Label for Zulip app version in About Zulip page"
  },
  "aboutPageOpenSourceLicenses": "Open-source licenses",
  "@aboutPageOpenSourceLicenses": {
    "description": "Item title in About Zulip page to navigate to Licenses page"
  },
  "aboutPageTapToView": "Tap to view",
  "@aboutPageTapToView": {
    "description": "Item subtitle in About Zulip page to navigate to Licenses page"
  },
  "chooseAccountPageTitle": "Choose account",
  "@chooseAccountPageTitle": {
    "description": "Title for the page to choose between Zulip accounts."
  },
  "switchAccountButton": "Switch account",
  "@switchAccountButton": {
    "description": "Label for main-menu button leading to the choose-account page."
  },
  "tryAnotherAccountMessage": "Your account at {url} is taking a while to load.",
  "@tryAnotherAccountMessage": {
    "description": "Message that appears on the loading screen after waiting for some time.",
    "url": {"type": "String", "example": "http://chat.example.com/"}
  },
  "tryAnotherAccountButton": "Try another account",
  "@tryAnotherAccountButton": {
    "description": "Label for loading screen button prompting user to try another account."
  },
  "chooseAccountPageLogOutButton": "Log out",
  "@chooseAccountPageLogOutButton": {
    "description": "Label for the 'Log out' button for an account on the choose-account page"
  },
  "logOutConfirmationDialogTitle": "Log out?",
  "@logOutConfirmationDialogTitle": {
    "description": "Title for a confirmation dialog for logging out."
  },
  "logOutConfirmationDialogMessage": "To use this account in the future, you will have to re-enter the URL for your organization and your account information.",
  "@logOutConfirmationDialogMessage": {
    "description": "Message for a confirmation dialog for logging out."
  },
  "logOutConfirmationDialogConfirmButton": "Log out",
  "@logOutConfirmationDialogConfirmButton": {
    "description": "Label for the 'Log out' button on a confirmation dialog for logging out."
  },
  "chooseAccountButtonAddAnAccount": "Add an account",
  "@chooseAccountButtonAddAnAccount": {
    "description": "Label for ChooseAccountPage button to add an account"
  },
  "profileButtonSendDirectMessage": "Send direct message",
  "@profileButtonSendDirectMessage": {
    "description": "Label for button in profile screen to navigate to DMs with the shown user."
  },
  "permissionsNeededTitle": "Permissions needed",
  "@permissionsNeededTitle": {
    "description": "Title for dialog asking the user to grant additional permissions."
  },
  "permissionsNeededOpenSettings": "Open settings",
  "@permissionsNeededOpenSettings": {
    "description": "Button label for permissions dialog button that opens the system settings screen."
  },
  "permissionsDeniedCameraAccess": "To upload an image, please grant Zulip additional permissions in Settings.",
  "@permissionsDeniedCameraAccess": {
    "description": "Message for dialog asking the user to grant permissions for camera access."
  },
  "permissionsDeniedReadExternalStorage": "To upload files, please grant Zulip additional permissions in Settings.",
  "@permissionsDeniedReadExternalStorage": {
    "description": "Message for dialog asking the user to grant permissions for external storage read access."
  },
  "actionSheetOptionMuteTopic": "Mute topic",
  "@actionSheetOptionMuteTopic":  {
    "description": "Label for muting a topic on action sheet."
  },
  "actionSheetOptionUnmuteTopic": "Unmute topic",
  "@actionSheetOptionUnmuteTopic":  {
    "description": "Label for unmuting a topic on action sheet."
  },
  "actionSheetOptionFollowTopic": "Follow topic",
  "@actionSheetOptionFollowTopic":  {
    "description": "Label for following a topic on action sheet."
  },
  "actionSheetOptionUnfollowTopic": "Unfollow topic",
  "@actionSheetOptionUnfollowTopic":  {
    "description": "Label for unfollowing a topic on action sheet."
  },
  "actionSheetOptionCopyMessageText": "Copy message text",
  "@actionSheetOptionCopyMessageText":  {
    "description": "Label for copy message text button on action sheet."
  },
  "actionSheetOptionCopyMessageLink": "Copy link to message",
  "@actionSheetOptionCopyMessageLink": {
    "description": "Label for copy message link button on action sheet."
  },
  "actionSheetOptionMarkAsUnread": "Mark as unread from here",
  "@actionSheetOptionMarkAsUnread":  {
    "description": "Label for mark as unread button on action sheet."
  },
  "actionSheetOptionShare": "Share",
  "@actionSheetOptionShare":  {
    "description": "Label for share button on action sheet."
  },
  "actionSheetOptionQuoteAndReply": "Quote and reply",
  "@actionSheetOptionQuoteAndReply":  {
    "description": "Label for Quote and reply button on action sheet."
  },
  "actionSheetOptionStarMessage": "Star message",
  "@actionSheetOptionStarMessage":  {
    "description": "Label for star button on action sheet."
  },
  "actionSheetOptionUnstarMessage": "Unstar message",
  "@actionSheetOptionUnstarMessage":  {
    "description": "Label for unstar button on action sheet."
  },
  "errorWebAuthOperationalErrorTitle": "Something went wrong",
  "@errorWebAuthOperationalErrorTitle": {
    "description": "Error title when third-party authentication has an operational error (not necessarily caused by invalid credentials)."
  },
  "errorWebAuthOperationalError": "An unexpected error occurred.",
  "@errorWebAuthOperationalError": {
    "description": "Error message when third-party authentication has an operational error (not necessarily caused by invalid credentials)."
  },
  "errorAccountLoggedInTitle": "Account already logged in",
  "@errorAccountLoggedInTitle": {
    "description": "Error title on attempting to log into an account that's already logged in."
  },
  "errorAccountLoggedIn": "The account {email} at {server} is already in your list of accounts.",
  "@errorAccountLoggedIn": {
    "description": "Error message on attempting to log into an account that's already logged in.",
    "placeholders": {
      "email": {"type": "String", "example": "user@example.com"},
      "server": {"type": "String", "example": "https://example.com"}
    }
  },
  "errorCouldNotFetchMessageSource": "Could not fetch message source",
  "@errorCouldNotFetchMessageSource": {
    "description": "Error message when the source of a message could not be fetched."
  },
  "errorCopyingFailed": "Copying failed",
  "@errorCopyingFailed": {
    "description": "Error message when copying the text of a message to the user's system clipboard failed."
  },
  "errorFailedToUploadFileTitle": "Failed to upload file: {filename}",
  "@errorFailedToUploadFileTitle": {
    "description": "Error title when the specified file failed to upload.",
    "placeholders": {
      "filename": {"type": "String", "example": "file.txt"}
    }
  },
  "errorFilesTooLarge": "{num, plural, =1{File is} other{{num} files are}} larger than the server's limit of {maxFileUploadSizeMib} MiB and will not be uploaded:\n\n{listMessage}",
  "@errorFilesTooLarge": {
    "description": "Error message when attached files are too large in size.",
    "placeholders": {
      "num": {"type": "int", "example": "2"},
      "maxFileUploadSizeMib": {"type": "int", "example": "15"},
      "listMessage": {"type": "String", "example": "foo.txt\nbar.txt"}
    }
  },
  "errorFilesTooLargeTitle": "{num, plural, =1{File} other{Files}} too large",
  "@errorFilesTooLargeTitle": {
    "description": "Error title when attached files are too large in size.",
    "placeholders": {
      "num": {"type": "int", "example": "4"}
    }
  },
  "errorLoginInvalidInputTitle": "Invalid input",
  "@errorLoginInvalidInputTitle": {
    "description": "Error title for login when input is invalid."
  },
  "errorLoginFailedTitle": "Login failed",
  "@errorLoginFailedTitle": {
    "description": "Error title for login when signing into a Zulip server fails."
  },
  "errorMessageNotSent": "Message not sent",
  "@errorMessageNotSent": {
    "description": "Error message for compose box when a message could not be sent."
  },
  "errorLoginCouldNotConnect": "Failed to connect to server:\n{url}",
  "@errorLoginCouldNotConnect": {
    "description": "Error message when the app could not connect to the server.",
    "placeholders": {
      "url": {"type": "String", "example": "http://example.com/"}
    }
  },
  "errorLoginCouldNotConnectTitle": "Could not connect",
  "@errorLoginCouldNotConnectTitle": {
    "description": "Error title when the app could not connect to the server."
  },
  "errorMessageDoesNotSeemToExist": "That message does not seem to exist.",
  "@errorMessageDoesNotSeemToExist": {
    "description": "Error message when loading a message that does not exist."
  },
  "errorQuotationFailed": "Quotation failed",
  "@errorQuotationFailed": {
    "description": "Error message when quoting a message failed."
  },
  "errorServerMessage": "The server said:\n\n{message}",
  "@errorServerMessage": {
    "description": "Error message that quotes an error from the server.",
    "placeholders": {
      "message": {"type": "String", "example": "Invalid format"}
    }
  },
  "errorConnectingToServerShort": "Error connecting to Zulip. Retryingâ€¦",
  "@errorConnectingToServerShort": {
    "description": "Short error message for a generic unknown error connecting to the server."
  },
  "errorConnectingToServerDetails": "Error connecting to Zulip at {serverUrl}. Will retry:\n\n{error}",
  "@errorConnectingToServerDetails": {
    "description": "Dialog error message for a generic unknown error connecting to the server with details.",
    "placeholders": {
      "serverUrl": {"type": "String", "example": "http://example.com/"},
      "error": {"type": "String", "example": "Invalid format"}
    }
  },
  "errorHandlingEventTitle": "Error handling a Zulip event. Retrying connectionâ€¦",
  "@errorHandlingEventTitle": {
    "description": "Error title on failing to handle a Zulip server event."
  },
  "errorHandlingEventDetails": "Error handling a Zulip event from {serverUrl}; will retry.\n\nError: {error}\n\nEvent: {event}",
  "@errorHandlingEventDetails": {
    "description": "Error details on failing to handle a Zulip server event.",
    "placeholders": {
      "serverUrl": {"type":  "String", "example":  "https://chat.example.com"},
      "error": {"type": "String", "example": "Unexpected null value"},
      "event": {"type": "String", "example": "UpdateMessageEvent(id: 123, messageIds: [2345, 3456], newTopic: 'dinner')"}
    }
  },
  "errorMuteTopicFailed": "Failed to mute topic",
  "@errorMuteTopicFailed": {
    "description": "Error message when muting a topic failed."
  },
  "errorUnmuteTopicFailed": "Failed to unmute topic",
  "@errorUnmuteTopicFailed": {
    "description": "Error message when unmuting a topic failed."
  },
  "errorFollowTopicFailed": "Failed to follow topic",
  "@errorFollowTopicFailed": {
    "description": "Error message when following a topic failed."
  },
  "errorUnfollowTopicFailed": "Failed to unfollow topic",
  "@errorUnfollowTopicFailed": {
    "description": "Error message when unfollowing a topic failed."
  },
  "errorSharingFailed": "Sharing failed",
  "@errorSharingFailed": {
    "description": "Error message when sharing a message failed."
  },
  "errorStarMessageFailedTitle": "Failed to star message",
  "@errorStarMessageFailedTitle": {
    "description": "Error title when starring a message failed."
  },
  "errorUnstarMessageFailedTitle": "Failed to unstar message",
  "@errorUnstarMessageFailedTitle": {
    "description": "Error title when unstarring a message failed."
  },
  "successLinkCopied": "Link copied",
  "@successLinkCopied": {
    "description": "Success message after copy link action completed."
  },
  "successMessageTextCopied": "Message text copied",
  "@successMessageTextCopied": {
    "description": "Message when content of a message was copied to the user's system clipboard."
  },
  "successMessageLinkCopied": "Message link copied",
  "@successMessageLinkCopied": {
    "description": "Message when link of a message was copied to the user's system clipboard."
  },
  "errorBannerDeactivatedDmLabel": "You cannot send messages to deactivated users.",
  "@errorBannerDeactivatedDmLabel": {
    "description": "Label text for error banner when sending a message to one or multiple deactivated users."
  },
  "errorBannerCannotPostInChannelLabel": "You do not have permission to post in this channel.",
  "@errorBannerCannotPostInChannelLabel": {
    "description": "Error-banner text replacing the compose box when you do not have permission to send a message to the channel."
  },
  "composeBoxAttachFilesTooltip": "Attach files",
  "@composeBoxAttachFilesTooltip": {
    "description": "Tooltip for compose box icon to attach a file to the message."
  },
  "composeBoxAttachMediaTooltip": "Attach images or videos",
  "@composeBoxAttachMediaTooltip": {
    "description": "Tooltip for compose box icon to attach media to the message."
  },
  "composeBoxAttachFromCameraTooltip": "Take a photo",
  "@composeBoxAttachFromCameraTooltip": {
    "description": "Tooltip for compose box icon to attach an image from the camera to the message."
  },
  "composeBoxGenericContentHint": "Type a message",
  "@composeBoxGenericContentHint": {
    "description": "Hint text for content input when sending a message."
  },
  "composeBoxDmContentHint": "Message @{user}",
  "@composeBoxDmContentHint": {
    "description": "Hint text for content input when sending a message to one other person.",
    "placeholders": {
      "user": {"type": "String", "example": "channel name"}
    }
  },
  "composeBoxGroupDmContentHint": "Message group",
  "@composeBoxGroupDmContentHint": {
    "description": "Hint text for content input when sending a message to a group."
  },
  "composeBoxSelfDmContentHint": "Jot down something",
  "@composeBoxSelfDmContentHint": {
    "description": "Hint text for content input when sending a message to yourself."
  },
  "composeBoxChannelContentHint": "Message #{channel} > {topic}",
  "@composeBoxChannelContentHint": {
    "description": "Hint text for content input when sending a message to a channel",
    "placeholders": {
      "channel": {"type": "String", "example": "channel name"},
      "topic": {"type": "String", "example": "topic name"}
    }
  },
  "composeBoxSendTooltip": "Send",
  "@composeBoxSendTooltip":  {
    "description": "Tooltip for send button in compose box."
  },
  "composeBoxUnknownChannelName": "(unknown channel)",
  "@composeBoxUnknownChannelName": {
    "description": "Replacement name for channel when it cannot be found in the store."
  },
  "composeBoxTopicHintText": "Topic",
  "@composeBoxTopicHintText":  {
    "description": "Hint text for topic input widget in compose box."
  },
  "composeBoxUploadingFilename": "Uploading {filename}â€¦",
  "@composeBoxUploadingFilename": {
    "description": "Placeholder in compose box showing the specified file is currently uploading.",
    "placeholders": {
      "filename": {"type": "String", "example": "file.txt"}
    }
  },
  "unknownUserName": "(unknown user)",
  "@unknownUserName": {
    "description": "Name placeholder to use for a user when we don't know their name."
  },
  "messageListGroupYouAndOthers": "You and {others}",
  "@messageListGroupYouAndOthers": {
    "description": "Message list recipient header for a DM group with others.",
    "placeholders": {
      "others": {"type": "String", "example": "Alice, Bob"}
    }
  },
  "messageListGroupYouWithYourself": "You with yourself",
  "@messageListGroupYouWithYourself": {
    "description": "Message list recipient header for a DM group that only includes yourself."
  },
  "contentValidationErrorTooLong": "Message length shouldn't be greater than 10000 characters.",
  "@contentValidationErrorTooLong": {
    "description": "Content validation error message when the message is too long."
  },
  "contentValidationErrorEmpty": "You have nothing to send!",
  "@contentValidationErrorEmpty": {
    "description": "Content validation error message when the message is empty."
  },
  "contentValidationErrorQuoteAndReplyInProgress": "Please wait for the quotation to complete.",
  "@contentValidationErrorQuoteAndReplyInProgress": {
    "description": "Content validation error message when a quotation has not completed yet."
  },
  "contentValidationErrorUploadInProgress": "Please wait for the upload to complete.",
  "@contentValidationErrorUploadInProgress": {
    "description": "Content validation error message when attachments have not finished uploading."
  },
  "dialogCancel": "Cancel",
  "@dialogCancel": {
    "description": "Button label in dialogs to cancel."
  },
  "dialogContinue": "Continue",
  "@dialogContinue": {
    "description": "Button label in dialogs to proceed."
  },
  "dialogClose": "Close",
  "@dialogClose": {
    "description": "Button label in dialogs to close."
  },
  "errorDialogContinue": "OK",
  "@errorDialogContinue": {
    "description": "Button label in error dialogs to acknowledge the error and close the dialog."
  },
  "errorDialogTitle": "Error",
  "@errorDialogTitle": {
    "description": "Generic title for error dialog."
  },
  "errorShareFailed": "Failed to share the image",
  "@errorShareFailed": {
    "description": "Title for sharing image error dialog."
  },
  "snackBarDetails": "Details",
  "@snackBarDetails": {
    "description": "Button label for snack bar button that opens a dialog with more details."
  },
  "lightboxCopyLinkTooltip": "Copy link",
  "@lightboxCopyLinkTooltip": {
    "description": "Tooltip in lightbox for the copy link action."
  },
  "lightboxShareImageTooltip": "Share Image",
  "@lightboxShareImageTooltip": {
    "description": "Tooltip in lightbox for the Share Image action."
  },
  "loginPageTitle": "Log in",
  "@loginPageTitle": {
    "description": "Title for login page."
  },
  "loginFormSubmitLabel": "Log in",
  "@loginFormSubmitLabel": {
    "description": "Button text to submit login credentials."
  },
  "loginMethodDivider": "OR",
  "@loginMethodDivider": {
    "description": "Text on the divider between the username/password form and the third-party login options. Uppercase (for languages with letter case)."
  },
  "signInWithFoo": "Sign in with {method}",
  "@signInWithFoo": {
    "description": "Button to use {method} to sign in to the app.",
    "placeholders": {
      "method": {"type": "String", "example": "Google"}
    }
  },
  "loginAddAnAccountPageTitle": "Add an account",
  "@loginAddAnAccountPageTitle": {
    "description": "Title for page to add a Zulip account."
  },
  "loginServerUrlInputLabel": "Your Zulip server URL",
  "@loginServerUrlInputLabel": {
    "description": "Input label in login page for Zulip server URL entry."
  },
  "loginHidePassword": "Hide password",
  "@loginHidePassword": {
    "description": "Icon label for button to hide password in input form."
  },
  "loginEmailLabel": "Email address",
  "@loginEmailLabel": {
    "description": "Label for input when an email is required to log in."
  },
  "loginErrorMissingEmail": "Please enter your email.",
  "@loginErrorMissingEmail": {
    "description": "Error message when an empty email was provided."
  },
  "loginPasswordLabel": "Password",
  "@loginPasswordLabel": {
    "description": "Label for password input field."
  },
  "loginErrorMissingPassword": "Please enter your password.",
  "@loginErrorMissingPassword": {
    "description": "Error message when an empty password was provided."
  },
  "loginUsernameLabel": "Username",
  "@loginUsernameLabel": {
    "description": "Label for input when a username is required to log in."
  },
  "loginErrorMissingUsername": "Please enter your username.",
  "@loginErrorMissingUsername": {
    "description": "Error message when an empty username was provided."
  },
  "topicValidationErrorTooLong": "Topic length shouldn't be greater than 60 characters.",
  "@topicValidationErrorTooLong": {
    "description": "Topic validation error when topic is too long."
  },
  "topicValidationErrorMandatoryButEmpty": "Topics are required in this organization.",
  "@topicValidationErrorMandatoryButEmpty": {
    "description": "Topic validation error when topic is required but was empty."
  },
  "errorInvalidResponse": "The server sent an invalid response",
  "@errorInvalidResponse": {
    "description": "Error message when an API call returned an invalid response."
  },
  "errorNetworkRequestFailed": "Network request failed",
  "@errorNetworkRequestFailed": {
    "description": "Error message when a network request fails."
  },
  "errorMalformedResponse": "Server gave malformed response; HTTP status {httpStatus}",
  "@errorMalformedResponse": {
    "description": "Error message when an API call fails because we could not parse the response.",
    "placeholders": {
      "httpStatus": {"type": "int", "example": "200"}
    }
  },
  "errorMalformedResponseWithCause": "Server gave malformed response; HTTP status {httpStatus}; {details}",
  "@errorMalformedResponseWithCause": {
    "description": "Error message when an API call fails because we could not parse the response, with details of the failure.",
    "placeholders": {
      "httpStatus": {"type": "int", "example": "200"},
      "details": {"type": "String", "example": "type 'Null' is not a subtype of type 'String' in type cast"}
    }
  },
  "errorRequestFailed": "Network request failed: HTTP status {httpStatus}",
  "@errorRequestFailed": {
    "description": "Error message when an API call fails.",
    "placeholders": {
      "httpStatus": {"type": "int", "example": "500"}
    }
  },
  "errorVideoPlayerFailed": "Unable to play the video",
  "@errorVideoPlayerFailed": {
    "description": "Error message when a video fails to play."
  },
  "serverUrlValidationErrorEmpty": "Please enter a URL.",
  "@serverUrlValidationErrorEmpty": {
    "description": "Error message when URL is empty"
  },
  "serverUrlValidationErrorInvalidUrl": "Please enter a valid URL.",
  "@serverUrlValidationErrorInvalidUrl": {
    "description": "Error message when URL is not in a valid format."
  },
  "serverUrlValidationErrorNoUseEmail": "Please enter the server URL, not your email.",
  "@serverUrlValidationErrorNoUseEmail": {
    "description": "Error message when URL looks like an email"
  },
  "serverUrlValidationErrorUnsupportedScheme": "The server URL must start with http:// or https://.",
  "@serverUrlValidationErrorUnsupportedScheme": {
    "description": "Error message when URL has an unsupported scheme."
  },
  "spoilerDefaultHeaderText": "Spoiler",
  "@spoilerDefaultHeaderText": {
    "description": "The default header text in a spoiler block ( https://zulip.com/help/spoilers )."
  },
  "markAllAsReadLabel": "Mark all messages as read",
  "@markAllAsReadLabel": {
    "description": "Button text to mark messages as read."
  },
  "markAsReadComplete": "Marked {num, plural, =1{1 message} other{{num} messages}} as read.",
  "@markAsReadComplete": {
    "description": "Message when marking messages as read has completed.",
    "placeholders": {
      "num": {"type": "int", "example": "4"}
    }
  },
  "markAsReadInProgress": "Marking messages as readâ€¦",
  "@markAsReadInProgress": {
    "description": "Progress message when marking messages as read."
  },
  "errorMarkAsReadFailedTitle": "Mark as read failed",
  "@errorMarkAsReadFailedTitle": {
    "description": "Error title when mark as read action failed."
  },
  "markAsUnreadComplete": "Marked {num, plural, =1{1 message} other{{num} messages}} as unread.",
  "@markAsUnreadComplete": {
    "description": "Message when marking messages as unread has completed.",
    "placeholders": {
      "num": {"type": "int", "example": "4"}
    }
  },
  "markAsUnreadInProgress": "Marking messages as unreadâ€¦",
  "@markAsUnreadInProgress": {
    "description": "Progress message when marking messages as unread."
  },
  "errorMarkAsUnreadFailedTitle": "Mark as unread failed",
  "@errorMarkAsUnreadFailedTitle": {
    "description": "Error title when mark as unread action failed."
  },
  "today": "Today",
  "@today": {
    "description": "Term to use to reference the current day."
  },
  "yesterday": "Yesterday",
  "@yesterday": {
    "description": "Term to use to reference the previous day."
  },
  "userRoleOwner": "Owner",
  "@userRoleOwner": {
    "description": "Label for UserRole.owner"
  },
  "userRoleAdministrator": "Administrator",
  "@userRoleAdministrator": {
    "description": "Label for UserRole.administrator"
  },
  "userRoleModerator": "Moderator",
  "@userRoleModerator": {
    "description": "Label for UserRole.moderator"
  },
  "userRoleMember": "Member",
  "@userRoleMember": {
    "description": "Label for UserRole.member"
  },
  "userRoleGuest": "Guest",
  "@userRoleGuest": {
    "description": "Label for UserRole.guest"
  },
  "userRoleUnknown": "Unknown",
  "@userRoleUnknown": {
    "description": "Label for UserRole.unknown"
  },
  "inboxPageTitle": "Inbox",
  "@inboxPageTitle": {
    "description": "Title for the page with unreads."
  },
  "recentDmConversationsPageTitle": "Direct messages",
  "@recentDmConversationsPageTitle": {
    "description": "Title for the page with a list of DM conversations."
  },
  "combinedFeedPageTitle": "Combined feed",
  "@combinedFeedPageTitle": {
    "description": "Page title for the 'Combined feed' message view."
  },
  "mentionsPageTitle": "Mentions",
  "@mentionsPageTitle": {
    "description": "Page title for the 'Mentions' message view."
  },
  "starredMessagesPageTitle": "Starred messages",
  "@starredMessagesPageTitle": {
    "description": "Page title for the 'Starred messages' message view."
  },
  "channelsPageTitle": "Channels",
  "@channelsPageTitle": {
    "description": "Title for the page with a list of subscribed channels."
  },
  "mainMenuMyProfile": "My profile",
  "@mainMenuMyProfile": {
    "description": "Label for main-menu button leading to the user's own profile."
  },
  "channelFeedButtonTooltip": "Channel feed",
  "@channelFeedButtonTooltip": {
    "description": "Tooltip for button to navigate to a given channel's feed"
  },
  "notifGroupDmConversationLabel": "{senderFullName} to you and {numOthers, plural, =1{1 other} other{{numOthers} others}}",
  "@notifGroupDmConversationLabel": {
    "description": "Label for a group DM conversation notification.",
    "placeholders": {
      "senderFullName": {"type": "String", "example": "Alice"},
      "numOthers": {"type": "int", "example": "4"}
    }
  },
  "notifSelfUser": "You",
  "@notifSelfUser": {
    "description": "Display name for the user themself, to show after replying in an Android notification"
  },
  "onePersonTyping": "{typist} is typingâ€¦",
  "@onePersonTyping": {
    "description": "Text to display when there is one user typing.",
    "placeholders": {
      "typist": {"type": "String", "example": "Alice"}
    }
  },
  "twoPeopleTyping": "{typist} and {otherTypist} are typingâ€¦",
  "@twoPeopleTyping": {
    "description": "Text to display when there are two users typing.",
    "placeholders": {
      "typist": {"type": "String", "example": "Alice"},
      "otherTypist": {"type": "String", "example": "Bob"}
    }
  },
  "manyPeopleTyping": "Several people are typingâ€¦",
  "@manyPeopleTyping": {
    "description": "Text to display when there are multiple users typing."
  },
  "messageIsEditedLabel": "EDITED",
  "@messageIsEditedLabel": {
    "description": "Label for an edited message. (Use ALL CAPS for cased alphabets: Latin, Greek, Cyrillic, etc.)"
  },
  "messageIsMovedLabel": "MOVED",
  "@messageIsMovedLabel": {
    "description": "Label for a moved message. (Use ALL CAPS for cased alphabets: Latin, Greek, Cyrillic, etc.)"
  },
  "pollWidgetQuestionMissing": "No question.",
  "@pollWidgetQuestionMissing": {
    "description": "Text to display for a poll when the question is missing"
  },
  "pollWidgetOptionsMissing": "This poll has no options yet.",
  "@pollWidgetOptionsMissing": {
    "description": "Text to display for a poll when it has no options"
  },
  "errorNotificationOpenTitle": "Failed to open notification",
  "@errorNotificationOpenTitle": {
    "description": "Error title when notification opening fails"
  },
  "errorNotificationOpenAccountMissing": "The account associated with this notification no longer exists.",
  "@errorNotificationOpenAccountMissing": {
    "description": "Error message when the account associated with the notification is not found"
  },
  "errorReactionAddingFailedTitle": "Adding reaction failed",
  "@errorReactionAddingFailedTitle": {
    "description": "Error title when adding a message reaction fails"
  },
  "errorReactionRemovingFailedTitle": "Removing reaction failed",
  "@errorReactionRemovingFailedTitle": {
    "description": "Error title when removing a message reaction fails"
  },
  "emojiReactionsMore": "more",
  "@emojiReactionsMore": {
    "description": "Label for a button opening the emoji picker."
  },
  "emojiPickerSearchEmoji": "Search emoji",
  "@emojiPickerSearchEmoji": {
    "description": "Hint text for the emoji picker search text field."
  }
}
