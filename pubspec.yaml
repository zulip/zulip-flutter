name: zulip
description: A Zulip client for Android and iOS
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.12+12

environment:
  # We use a development version of Flutter while in beta,
  # and the corresponding dev version of the Dart SDK.  The hope is
  # that by the time we want to release, these will have become stable.
  # TODO: Before general release, switch to stable Flutter and Dart versions,
  #   or pin exact versions: https://github.com/zulip/zulip-flutter/issues/15
  sdk: '>=3.4.0-256.0.dev <4.0.0'
  flutter: '>=3.21.0-12.0.pre.26'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  app_settings: ^5.0.0
  collection: ^1.17.2
  convert: ^3.1.1
  crypto: ^3.0.3
  device_info_plus: ^9.0.0
  drift: ^2.5.0
  file_picker: ^6.0.0
  firebase_core: ^2.14.0
  firebase_messaging: ^14.6.3
  flutter_color_models: ^1.3.3+2
  flutter_local_notifications: ^16.1.0
  flutter_local_notifications_platform_interface: ^7.0.0+1
  html: ^0.15.1
  http: ^1.0.0
  image_picker: ^1.0.0
  intl: ^0.19.0
  json_annotation: ^4.8.1
  package_info_plus: ^5.0.1
  path: ^1.8.3
  path_provider: ^2.0.13
  share_plus: ^7.0.0
  share_plus_platform_interface: ^3.3.1
  sqlite3_flutter_libs: ^0.5.13
  url_launcher: ^6.1.11
  url_launcher_android: ">=6.1.0"
  sqlite3: ^2.4.0
  diacritic: ^0.1.5

dev_dependencies:
  flutter_driver:
    sdk: flutter
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter

  build_runner: ^2.3.3
  checks: ^0.3.0
  clock: ^1.1.1
  drift_dev: ^2.5.2
  fake_async: ^1.3.1
  flutter_lints: ^3.0.0
  json_serializable: ^6.5.4
  stack_trace: ^1.11.1
  test: ^1.23.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # Generate localization bindings from ARB files in lib/l10n/.
  # This happens automatically with `flutter run`
  # but can be manually run with `flutter gen-l10n`
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/Noto_Color_Emoji/LICENSE
    - assets/Source_Code_Pro/LICENSE.md
    - assets/Source_Sans_3/LICENSE.md

  fonts:
    # Google's emoji font. (Web uses these emoji for the "Google" emojiset.)
    #
    # This should not be used on iOS.
    # iOS doesn't support any of the formats this font is available in,
    # and if we use it on iOS (whether as a primary font or a fallback)
    # we'll get blank spaces where we could have had Apple-style emojis.
    #
    # Also, in text that might contain non-emoji glyphs, this should
    # always come after a non-emoji font in the chain of font-family
    # fallbacks. Letting this font handle e.g. space characters will
    # make text look weird.
    # TODO don't bundle this on iOS; it wastes several MB because it's unused.
    - family: Noto Color Emoji
      fonts:
        - asset: assets/Noto_Color_Emoji/Noto-COLRv1.ttf

    - family: Source Code Pro
      fonts:
        - asset: assets/Source_Code_Pro/SourceCodeVF-Upright.otf
        - asset: assets/Source_Code_Pro/SourceCodeVF-Italic.otf
          style: italic

    - family: Source Sans 3
      fonts:
        - asset: assets/Source_Sans_3/SourceSans3VF-Upright.otf
        - asset: assets/Source_Sans_3/SourceSans3VF-Italic.otf
          style: italic

    # Zulip's custom icons.  To use or edit, see class ZulipIcons.
    - family: Zulip Icons
      fonts:
        - asset: assets/icons/ZulipIcons.ttf

    # If adding a font, remember to account for its license in lib/licenses.dart.
