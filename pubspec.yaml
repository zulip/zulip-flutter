name: zulip
description: A Zulip client for Android and iOS
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 0.0.3+3

environment:
  # We use a development version of Flutter while developing a prototype,
  # and the corresponding dev version of the Dart SDK.  The hope is
  # that by the time we want to release, these will have become stable.
  # TODO: Before general release, switch to stable Flutter and Dart versions,
  #   or pin exact versions: https://github.com/zulip/zulip-flutter/issues/15
  sdk: '>=3.1.0-163.0.dev <4.0.0'
  flutter: '>=3.11.0-18.0.pre.81'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  json_annotation: ^4.8.0
  http: ^0.13.5
  html: ^0.15.1
  intl: ^0.18.0
  share_plus: ^7.0.0
  device_info_plus: ^9.0.0
  file_picker: ^5.2.7
  drift: ^2.5.0
  path_provider: ^2.0.13
  path: ^1.8.3
  sqlite3_flutter_libs: ^0.5.13
  app_settings: ^4.2.0
  image_picker: ^0.8.7+3
  package_info_plus: ^4.0.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  json_serializable: ^6.5.4
  build_runner: ^2.3.3
  test: ^1.23.1
  checks: ^0.2.2
  drift_dev: ^2.5.2
  fake_async: ^1.3.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/Source_Code_Pro/LICENSE.md

  # If adding a font, remember to account for its license in lib/licenses.dart.
  fonts:
    - family: Source Code Pro
      fonts:
        - asset: assets/Source_Code_Pro/SourceCodeVF-Upright.otf
        - asset: assets/Source_Code_Pro/SourceCodeVF-Italic.otf
          style: italic
